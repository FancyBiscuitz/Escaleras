void Escalera_doble_variable_animada()
{

    //Inputs del usuario
    int Numero_de_escalones;
    std::cout << "Ingrese numero de escalones: ";
    std::cin >> Numero_de_escalones;
    std::cout << std::endl;

    int Posicion_de_la_persona;
    std::cout << "Ingrese posicion inicial de la persona: ";
    std::cin >> Posicion_de_la_persona;
    std::cout << std::endl;

    int Velocidad_de_animacion_en_ms;
    std::cout << "Ingrese la velocidad para ralentizar la animacion (ms): ";
    std::cin >> Velocidad_de_animacion_en_ms;

    system("CLS");

    std::string Escalon_izquierda = "___";
    std::string Escalon_derecha = "___";
    std::string Escalon_cero = "___";
    std::string Separacion_izquierda = "   ";
    std::string Separacion_medio; 

    //Cambion de signo al numero de escalones
    int sup = -1*Numero_de_escalones;

    //Variable booleana para definir la Separacion_izquierda en ciertos casos
    bool sup_bool = false;

    //Calcula cuantas veces se mueve la persona
    int move = 2*(abs(Posicion_de_la_persona) + (abs(Posicion_de_la_persona)-1)) + 3;

    //Define si la persona esta en la parte izquierda o derecha para sumar o restar su posicion por 1
    int Direccion_de_movimiento = ( Posicion_de_la_persona < 0 ) ? 1 : -1;

    //Ejecutado en numeros de veces que la persona se mueve
    for (int c = 0; c < move; c++)
    {
        //Cambio de Direccion de movimiento si la persona llega al escalon -m
        if (c == move/2)
        {
            Direccion_de_movimiento *= -1;
        }
        //For para Imprimir la escalera
        for (int i = sup; i < 0; i++)
        {
            //Calcular la separacion del medio en linea
            for (int j = 0; j < (-1*i*2)-1; j++)
            {
                Separacion_medio += "    ";
            }

            //Cambiar escalones y separacion a partir del escalon i+2
            if (i < 0 && i > sup + 1)
            {
                Escalon_izquierda = "|" + Escalon_izquierda;
                Escalon_derecha = Escalon_derecha + "|";
                Separacion_izquierda += "    ";
                sup_bool = true;
            }
            //Cambiar solo escalones en el caso i+1
            else if (i == sup + 1)
            {
                Escalon_izquierda = "|" + Escalon_izquierda;
                Escalon_derecha = Escalon_derecha + "|";
                sup_bool = true;
            }
            //Imprimir escalones a partir de i+1
            if (sup_bool)
            {
                if (Posicion_de_la_persona == i)
                {
                    Escalon_izquierda = "|_P_";
                }
                else if (Posicion_de_la_persona == -1*i)
                {
                    Escalon_derecha = "_P_|";
                }
                std::cout << Separacion_izquierda << Escalon_izquierda << Separacion_medio + " " << Escalon_derecha << std::endl;
            }
            //Imprimir escalon en el caso del escalon i
            else
            {
                if (Posicion_de_la_persona == i)
                {
                    Escalon_izquierda = "_P_";
                }
                else if (Posicion_de_la_persona == -1*i)
                {
                    Escalon_derecha = "_P_";
                }
                std::cout << Escalon_izquierda << Separacion_medio + " " << Escalon_derecha << std::endl;
            }

            //Resetear variables
            Escalon_izquierda = "___";
            Escalon_derecha = "___";
            Separacion_medio = "";

            //Imprimir escalon cero
            if (i == -1)
            {
                if (Posicion_de_la_persona == 0)
                {
                    Escalon_cero = "_P_";
                }
                std::cout << Separacion_izquierda + "    |" + Escalon_cero + "|";
                Escalon_cero = "___";
            }
        }
        //Sleep y clear
        Sleep(Velocidad_de_animacion_en_ms);
        system("CLS");
        //Resetear algunas variables y cambiar posicion de la persona
        sup_bool = false;
        Separacion_izquierda = "   ";
        Posicion_de_la_persona += Direccion_de_movimiento;
    }
}
